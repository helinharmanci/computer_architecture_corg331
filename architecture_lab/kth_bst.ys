#Helin Ayça Harmancı - 2448470
.pos 0
        irmovq Stack, %rsp      # Set up stack pointer
        irmovq root, %rdi       #put the bst to rdi
        irmovq k,%rsi
        irmovq $8, %r8
        irmovq $1, %r9
        irmovq $0, %r10
        
        call kth_bst            # Execute kth_ll program
        halt                    # Terminate program 

.pos 0x200
root:
        .quad 17
        .quad node6
        .quad node24
node6:
        .quad 6
        .quad node4
        .quad node11
node4:
        .quad 4
        .quad node3
        .quad node5
node3:
        .quad 3
        .quad 0
        .quad 0
node5:
        .quad 5
        .quad 0 # Remember that 0 is null.
        .quad 0
node11:
        .quad 11
        .quad node8
        .quad 0
node8:
        .quad 8
        .quad 0
        .quad 0
node24:
        .quad 24
        .quad node19
        .quad node40
node19:
        .quad 19
        .quad 0
        .quad 0
node40:
        .quad 40
        .quad 0
        .quad 52
node52:
        .quad 52
        .quad 0
        .quad 0
k:
        .quad 8

kth_bst:
        
        #stackte yer allocate etmem lazım
        pushq %r11
        pushq %r12
        pushq %r13

        andq %rdi, %rdi
        je eksi_bir
        rrmovq %rdi, %r11       #node r11'de
        mrmovq (%rdi), %r12     #root_un datası r12'de
        rrmovq %rsi, %r13       #pointer k r13'te
        mrmovq (%rsi), %r14     #k r14'te
        mrmovq 8(%r11), %rdi    #rdi'da root'un lefti var
        call kth_bst            #root'un leftini çağırıyorum
        subq %r10, %r14       
        jle return
        mrmovq (%rsi), %r14     #k'yı r14'e attım
        subq %r9, %r14          #k-1 yaptım
        rmmovq %r14, (%rsi)     #k=k-1 yaptım
        andq %r14, %r14         #k 0 mı?
        je root_data            #0'sa rootun datasını döndürücem
        addq %r8, %r11          
        mrmovq 8(%r11), %rdi    #rootun rightını rdiya attım
        call kth_bst
        jmp return


root_data:
        rrmovq %r12, %rax       #root'un datasını raxa attım
        jmp return

eksi_bir:
        irmovq $-1, %rax
        jmp return

return:
        #ters sırasıyla poplayacağım
        popq %r13
        popq %r12
        popq %r11
        ret





.pos 0x800
Stack:

